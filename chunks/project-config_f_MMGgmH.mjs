import { c as createComponent, r as renderTemplate, m as maybeRenderHead, u as unescapeHTML } from './astro/server_afRpe8AA.mjs';
import 'kleur/colors';
import 'clsx';

const html = "<h1 id=\"customizing-a-project\">Customizing A Project</h1>\n<p>This is a description of the configuration options in <code dir=\"auto\">project.json</code>:</p>\n<div class=\"expressive-code\"><link rel=\"stylesheet\" href=\"/_astro/ec.j8ofn.css\"><script type=\"module\" src=\"/_astro/ec.8zarh.js\"></script><figure class=\"frame not-content\"><figcaption class=\"header\"></figcaption><pre data-language=\"json5\"><code><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#D6DEEB;--1:#403F53\">{</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">  </span><span style=\"--0:#809191;--1:#616671\">// Language version of C3.</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">  </span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#ECC48D;--1:#9B504E\">langrev</span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#D6DEEB;--1:#403F53\">: </span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#ECC48D;--1:#9B504E\">1</span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#D6DEEB;--1:#403F53\">,</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">  </span><span style=\"--0:#809191;--1:#616671\">// Warnings used for all targets.</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">  </span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#ECC48D;--1:#9B504E\">warnings</span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#D6DEEB;--1:#403F53\">: [ </span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#ECC48D;--1:#9B504E\">no-unused</span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#D6DEEB;--1:#403F53\"> ],</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">  </span><span style=\"--0:#809191;--1:#616671\">// Directories where C3 library files may be found.</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">  </span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#ECC48D;--1:#9B504E\">dependency-search-paths</span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#D6DEEB;--1:#403F53\">: [ </span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#ECC48D;--1:#9B504E\">lib</span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#D6DEEB;--1:#403F53\"> ],</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">  </span><span style=\"--0:#809191;--1:#616671\">// Libraries to use for all targets.</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">  </span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#ECC48D;--1:#9B504E\">dependencies</span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#D6DEEB;--1:#403F53\">: [ ],</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">  </span><span style=\"--0:#809191;--1:#616671\">// Authors, optionally with email.</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">  </span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#ECC48D;--1:#9B504E\">authors</span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#D6DEEB;--1:#403F53\">: [ </span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#ECC48D;--1:#9B504E\">John Doe &#x3C;john.doe@example.com></span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#D6DEEB;--1:#403F53\"> ],</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">  </span><span style=\"--0:#809191;--1:#616671\">// Version using semantic versioning.</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">  </span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#ECC48D;--1:#9B504E\">version</span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#D6DEEB;--1:#403F53\">: </span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#ECC48D;--1:#9B504E\">0.1.0</span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#D6DEEB;--1:#403F53\">,</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">  </span><span style=\"--0:#809191;--1:#616671\">// Sources compiled for all targets.</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">  </span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#ECC48D;--1:#9B504E\">sources</span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#D6DEEB;--1:#403F53\">: [ </span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#ECC48D;--1:#9B504E\">src/**</span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#D6DEEB;--1:#403F53\"> ],</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">  </span><span style=\"--0:#809191;--1:#616671\">// C sources if the project also compiles C sources</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">  </span><span style=\"--0:#809191;--1:#616671\">// relative to the project file.</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">  </span><span style=\"--0:#809191;--1:#616671\">// \"c-sources\": [ \"csource/**\" ],</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">  </span><span style=\"--0:#809191;--1:#616671\">// Include directories for C sources relative to the project file.</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">  </span><span style=\"--0:#809191;--1:#616671\">// \"c-include-dirs: [ \"csource/include\" ],</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">  </span><span style=\"--0:#809191;--1:#616671\">// Output location, relative to project file.</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">  </span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#ECC48D;--1:#9B504E\">output</span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#D6DEEB;--1:#403F53\">: </span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#ECC48D;--1:#9B504E\">../build</span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#D6DEEB;--1:#403F53\">,</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">  </span><span style=\"--0:#809191;--1:#616671\">// Architecture and OS target.</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">  </span><span style=\"--0:#809191;--1:#616671\">// You can use 'c3c --list-targets' to list all valid targets,</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">  </span><span style=\"--0:#809191;--1:#616671\">// \"target\": \"windows-x64\",</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">  </span><span style=\"--0:#809191;--1:#616671\">// Current Target options:</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">  </span><span style=\"--0:#809191;--1:#616671\">//    android-aarch64</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">  </span><span style=\"--0:#809191;--1:#616671\">//    elf-aarch64 elf-riscv32 elf-riscv64 elf-x86 elf-x64 elf-xtensa</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">  </span><span style=\"--0:#809191;--1:#616671\">//    mcu-x86 mingw-x64 netbsd-x86 netbsd-x64 openbsd-x86 openbsd-x64</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">  </span><span style=\"--0:#809191;--1:#616671\">//    freebsd-x86 freebsd-x64 ios-aarch64</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">  </span><span style=\"--0:#809191;--1:#616671\">//    linux-aarch64 linux-riscv32 linux-riscv64 linux-x86 linux-x64</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">  </span><span style=\"--0:#809191;--1:#616671\">//    macos-aarch64 macos-x64</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">  </span><span style=\"--0:#809191;--1:#616671\">//    wasm32 wasm64</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">  </span><span style=\"--0:#809191;--1:#616671\">//    windows-aarch64 windows-x64</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">  </span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#ECC48D;--1:#9B504E\">targets</span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#D6DEEB;--1:#403F53\">: {</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">    </span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#ECC48D;--1:#9B504E\">linux-x64</span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#D6DEEB;--1:#403F53\">: {</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">      </span><span style=\"--0:#809191;--1:#616671\">// Executable or library.</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">      </span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#ECC48D;--1:#9B504E\">type</span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#D6DEEB;--1:#403F53\">: </span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#ECC48D;--1:#9B504E\">executable</span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#D6DEEB;--1:#403F53\">,</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">      </span><span style=\"--0:#809191;--1:#616671\">// Additional libraries, sources</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">      </span><span style=\"--0:#809191;--1:#616671\">// and overrides of global settings here.</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\"><span style=\"--0:#D6DEEB;--1:#403F53\">    </span></span><span style=\"--0:#D6DEEB;--1:#403F53\">},</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\"><span style=\"--0:#D6DEEB;--1:#403F53\">  </span></span><span style=\"--0:#D6DEEB;--1:#403F53\">},</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">  </span><span style=\"--0:#809191;--1:#616671\">// Global settings.</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">  </span><span style=\"--0:#809191;--1:#616671\">// C compiler if the project also compiles C sources</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">  </span><span style=\"--0:#809191;--1:#616671\">// defaults to 'cc'.</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">  </span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#ECC48D;--1:#9B504E\">cc</span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#D6DEEB;--1:#403F53\">: </span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#ECC48D;--1:#9B504E\">cc</span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#D6DEEB;--1:#403F53\">,</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">  </span><span style=\"--0:#809191;--1:#616671\">// CPU name, used for optimizations in the LLVM backend.</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">  </span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#ECC48D;--1:#9B504E\">cpu</span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#D6DEEB;--1:#403F53\">: </span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#ECC48D;--1:#9B504E\">generic</span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#D6DEEB;--1:#403F53\">,</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">  </span><span style=\"--0:#809191;--1:#616671\">// Debug information, may be \"none\", \"full\" and \"line-tables\".</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">  </span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#ECC48D;--1:#9B504E\">debug-info</span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#D6DEEB;--1:#403F53\">: </span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#ECC48D;--1:#9B504E\">full</span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#D6DEEB;--1:#403F53\">,</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">  </span><span style=\"--0:#809191;--1:#616671\">// FP math behaviour: \"strict\", \"relaxed\", \"fast\".</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">  </span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#ECC48D;--1:#9B504E\">fp-math</span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#D6DEEB;--1:#403F53\">: </span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#ECC48D;--1:#9B504E\">strict</span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#D6DEEB;--1:#403F53\">,</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">  </span><span style=\"--0:#809191;--1:#616671\">// Link libc other default libraries.</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">  </span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#ECC48D;--1:#9B504E\">link-libc</span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#D6DEEB;--1:#403F53\">: </span><span style=\"--0:#82AAFF;--1:#3C63B3\">true</span><span style=\"--0:#D6DEEB;--1:#403F53\">,</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">  </span><span style=\"--0:#809191;--1:#616671\">// Memory environment: \"normal\", \"small\", \"tiny\", \"none\".</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">  </span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#ECC48D;--1:#9B504E\">memory-env</span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#D6DEEB;--1:#403F53\">: </span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#ECC48D;--1:#9B504E\">normal</span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#D6DEEB;--1:#403F53\">,</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">  </span><span style=\"--0:#809191;--1:#616671\">// Optimization: \"O0\", \"O1\", \"O2\", \"O3\", \"O4\", \"O5\", \"Os\", \"Oz\".</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">  </span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#ECC48D;--1:#9B504E\">opt</span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#D6DEEB;--1:#403F53\">: </span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#ECC48D;--1:#9B504E\">O0</span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#D6DEEB;--1:#403F53\">,</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">  </span><span style=\"--0:#809191;--1:#616671\">// Code optimization level: \"none\", \"less\", \"more\", \"max\".</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">  </span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#ECC48D;--1:#9B504E\">optlevel</span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#D6DEEB;--1:#403F53\">: </span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#ECC48D;--1:#9B504E\">none</span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#D6DEEB;--1:#403F53\">,</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">  </span><span style=\"--0:#809191;--1:#616671\">// Code size optimization: \"none\", \"small\", \"tiny\".</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">  </span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#ECC48D;--1:#9B504E\">optsize</span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#D6DEEB;--1:#403F53\">: </span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#ECC48D;--1:#9B504E\">none</span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#D6DEEB;--1:#403F53\">,</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">  </span><span style=\"--0:#809191;--1:#616671\">// Relocation model: \"none\", \"pic\", \"PIC\", \"pie\", \"PIE\".</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">  </span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#ECC48D;--1:#9B504E\">reloc</span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#D6DEEB;--1:#403F53\">: </span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#ECC48D;--1:#9B504E\">none</span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#D6DEEB;--1:#403F53\">,</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">  </span><span style=\"--0:#809191;--1:#616671\">// Trap on signed and unsigned integer wrapping for testing.</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">  </span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#ECC48D;--1:#9B504E\">trap-on-wrap</span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#D6DEEB;--1:#403F53\">: </span><span style=\"--0:#82AAFF;--1:#3C63B3\">false</span><span style=\"--0:#D6DEEB;--1:#403F53\">,</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">  </span><span style=\"--0:#809191;--1:#616671\">// Turn safety (contracts, runtime bounds checking, null pointer checks etc).</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">  </span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#ECC48D;--1:#9B504E\">safe</span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#D6DEEB;--1:#403F53\">: </span><span style=\"--0:#82AAFF;--1:#3C63B3\">true</span><span style=\"--0:#D6DEEB;--1:#403F53\">,</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">  </span><span style=\"--0:#809191;--1:#616671\">// Compile all modules together, enables more inlining.</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">  </span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#ECC48D;--1:#9B504E\">single-module</span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#D6DEEB;--1:#403F53\">: </span><span style=\"--0:#82AAFF;--1:#3C63B3\">true</span><span style=\"--0:#D6DEEB;--1:#403F53\">,</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">  </span><span style=\"--0:#809191;--1:#616671\">// Use / don't use soft float, value is otherwise target default.</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">  </span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#ECC48D;--1:#9B504E\">soft-float</span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#D6DEEB;--1:#403F53\">: </span><span style=\"--0:#82AAFF;--1:#3C63B3\">false</span><span style=\"--0:#D6DEEB;--1:#403F53\">,</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">  </span><span style=\"--0:#809191;--1:#616671\">// Strip unused code and globals from the output.</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">  </span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#ECC48D;--1:#9B504E\">strip-unused</span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#D6DEEB;--1:#403F53\">: </span><span style=\"--0:#82AAFF;--1:#3C63B3\">true</span><span style=\"--0:#D6DEEB;--1:#403F53\">,</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">  </span><span style=\"--0:#809191;--1:#616671\">// The size of the symtab, which limits the amount</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">  </span><span style=\"--0:#809191;--1:#616671\">// of symbols that can be used. Should usually not be changed.</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">  </span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#ECC48D;--1:#9B504E\">symtab</span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#D6DEEB;--1:#403F53\">: 1048576,</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">  </span><span style=\"--0:#809191;--1:#616671\">// Use the system linker.</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">  </span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#ECC48D;--1:#9B504E\">linker</span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#D6DEEB;--1:#403F53\">: </span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#ECC48D;--1:#9B504E\">cc</span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#D6DEEB;--1:#403F53\">,</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">  </span><span style=\"--0:#809191;--1:#616671\">// Include the standard library.</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">  </span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#ECC48D;--1:#9B504E\">use-stdlib</span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#D6DEEB;--1:#403F53\">: </span><span style=\"--0:#82AAFF;--1:#3C63B3\">true</span><span style=\"--0:#D6DEEB;--1:#403F53\">,</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">  </span><span style=\"--0:#809191;--1:#616671\">// Set general level of x64 cpu: \"baseline\", \"ssse3\", \"sse4\", \"avx1\", \"avx2-v1\", \"avx2-v2\", \"avx512\", \"native\".</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">  </span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#ECC48D;--1:#9B504E\">x86cpu</span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#D6DEEB;--1:#403F53\">: </span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#ECC48D;--1:#9B504E\">native</span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#D6DEEB;--1:#403F53\">,</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">  </span><span style=\"--0:#809191;--1:#616671\">// Set max type of vector use: \"none\", \"mmx\", \"sse\", \"avx\", \"avx512\", \"native\".</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">  </span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#ECC48D;--1:#9B504E\">x86vec</span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#D6DEEB;--1:#403F53\">: </span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#ECC48D;--1:#9B504E\">sse</span><span style=\"--0:#D9F5DD;--1:#111111\">\"</span><span style=\"--0:#D6DEEB;--1:#403F53\">,</span></div></div><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#D6DEEB;--1:#403F53\">}</span></div></div></code></pre><div class=\"copy\"><button title=\"Copy to clipboard\" data-copied=\"Copied!\" data-code=\"{  // Language version of C3.  &#x22;langrev&#x22;: &#x22;1&#x22;,  // Warnings used for all targets.  &#x22;warnings&#x22;: [ &#x22;no-unused&#x22; ],  // Directories where C3 library files may be found.  &#x22;dependency-search-paths&#x22;: [ &#x22;lib&#x22; ],  // Libraries to use for all targets.  &#x22;dependencies&#x22;: [ ],  // Authors, optionally with email.  &#x22;authors&#x22;: [ &#x22;John Doe <john.doe@example.com>&#x22; ],  // Version using semantic versioning.  &#x22;version&#x22;: &#x22;0.1.0&#x22;,  // Sources compiled for all targets.  &#x22;sources&#x22;: [ &#x22;src/**&#x22; ],  // C sources if the project also compiles C sources  // relative to the project file.  // &#x22;c-sources&#x22;: [ &#x22;csource/**&#x22; ],  // Include directories for C sources relative to the project file.  // &#x22;c-include-dirs: [ &#x22;csource/include&#x22; ],  // Output location, relative to project file.  &#x22;output&#x22;: &#x22;../build&#x22;,  // Architecture and OS target.  // You can use &#x27;c3c --list-targets&#x27; to list all valid targets,  // &#x22;target&#x22;: &#x22;windows-x64&#x22;,  // Current Target options:  //    android-aarch64  //    elf-aarch64 elf-riscv32 elf-riscv64 elf-x86 elf-x64 elf-xtensa  //    mcu-x86 mingw-x64 netbsd-x86 netbsd-x64 openbsd-x86 openbsd-x64  //    freebsd-x86 freebsd-x64 ios-aarch64  //    linux-aarch64 linux-riscv32 linux-riscv64 linux-x86 linux-x64  //    macos-aarch64 macos-x64  //    wasm32 wasm64  //    windows-aarch64 windows-x64  &#x22;targets&#x22;: {    &#x22;linux-x64&#x22;: {      // Executable or library.      &#x22;type&#x22;: &#x22;executable&#x22;,      // Additional libraries, sources      // and overrides of global settings here.    },  },  // Global settings.  // C compiler if the project also compiles C sources  // defaults to &#x27;cc&#x27;.  &#x22;cc&#x22;: &#x22;cc&#x22;,  // CPU name, used for optimizations in the LLVM backend.  &#x22;cpu&#x22;: &#x22;generic&#x22;,  // Debug information, may be &#x22;none&#x22;, &#x22;full&#x22; and &#x22;line-tables&#x22;.  &#x22;debug-info&#x22;: &#x22;full&#x22;,  // FP math behaviour: &#x22;strict&#x22;, &#x22;relaxed&#x22;, &#x22;fast&#x22;.  &#x22;fp-math&#x22;: &#x22;strict&#x22;,  // Link libc other default libraries.  &#x22;link-libc&#x22;: true,  // Memory environment: &#x22;normal&#x22;, &#x22;small&#x22;, &#x22;tiny&#x22;, &#x22;none&#x22;.  &#x22;memory-env&#x22;: &#x22;normal&#x22;,  // Optimization: &#x22;O0&#x22;, &#x22;O1&#x22;, &#x22;O2&#x22;, &#x22;O3&#x22;, &#x22;O4&#x22;, &#x22;O5&#x22;, &#x22;Os&#x22;, &#x22;Oz&#x22;.  &#x22;opt&#x22;: &#x22;O0&#x22;,  // Code optimization level: &#x22;none&#x22;, &#x22;less&#x22;, &#x22;more&#x22;, &#x22;max&#x22;.  &#x22;optlevel&#x22;: &#x22;none&#x22;,  // Code size optimization: &#x22;none&#x22;, &#x22;small&#x22;, &#x22;tiny&#x22;.  &#x22;optsize&#x22;: &#x22;none&#x22;,  // Relocation model: &#x22;none&#x22;, &#x22;pic&#x22;, &#x22;PIC&#x22;, &#x22;pie&#x22;, &#x22;PIE&#x22;.  &#x22;reloc&#x22;: &#x22;none&#x22;,  // Trap on signed and unsigned integer wrapping for testing.  &#x22;trap-on-wrap&#x22;: false,  // Turn safety (contracts, runtime bounds checking, null pointer checks etc).  &#x22;safe&#x22;: true,  // Compile all modules together, enables more inlining.  &#x22;single-module&#x22;: true,  // Use / don&#x27;t use soft float, value is otherwise target default.  &#x22;soft-float&#x22;: false,  // Strip unused code and globals from the output.  &#x22;strip-unused&#x22;: true,  // The size of the symtab, which limits the amount  // of symbols that can be used. Should usually not be changed.  &#x22;symtab&#x22;: 1048576,  // Use the system linker.  &#x22;linker&#x22;: &#x22;cc&#x22;,  // Include the standard library.  &#x22;use-stdlib&#x22;: true,  // Set general level of x64 cpu: &#x22;baseline&#x22;, &#x22;ssse3&#x22;, &#x22;sse4&#x22;, &#x22;avx1&#x22;, &#x22;avx2-v1&#x22;, &#x22;avx2-v2&#x22;, &#x22;avx512&#x22;, &#x22;native&#x22;.  &#x22;x86cpu&#x22;: &#x22;native&#x22;,  // Set max type of vector use: &#x22;none&#x22;, &#x22;mmx&#x22;, &#x22;sse&#x22;, &#x22;avx&#x22;, &#x22;avx512&#x22;, &#x22;native&#x22;.  &#x22;x86vec&#x22;: &#x22;sse&#x22;,}\"><div></div></button></div></figure></div>\n<p>By default, an executable is assumed, but changing the type to <code dir=\"auto\">\"static-lib\"</code> or <code dir=\"auto\">\"dynamic-lib\"</code>\ncreates static library and dynamic library targets respectively.</p>\n<p><em>This part will be updated, stay tuned</em></p>\n<h2 id=\"compilation-options\">Compilation options</h2>\n<p>The project file contains common settings at the top level, that can be overridden by each\ntarget, by simply assigning that particular key. So if the top level defines <code dir=\"auto\">target</code> to be <code dir=\"auto\">macos-x64</code>\nand the actual target defines it to be <code dir=\"auto\">windows-x64</code>, then the <code dir=\"auto\">windows-x64</code> will be used for compilation.</p>\n<p>Similarly, compiler command line parameters can be used in turn to override the target setting.</p>\n<h4 id=\"targets\"><code dir=\"auto\">targets</code></h4>\n<p>The list of targets that can be built.</p>\n<h4 id=\"dependencies\"><code dir=\"auto\">dependencies</code></h4>\n<p>List of C3 libraries (“.c3l”) to use when compiling the target.</p>\n<h4 id=\"sources\"><code dir=\"auto\">sources</code></h4>\n<p>List of source files to compile and for tests which will run.</p>\n<h4 id=\"cc\"><code dir=\"auto\">cc</code></h4>\n<p>C compiler to use for compiling C sources (if C sources are compiled together with C3 files).</p>\n<h4 id=\"c-sources\"><code dir=\"auto\">c-sources</code></h4>\n<p>List of C sources to compile, using the default C compiler.</p>\n<h4 id=\"linker-search-paths\"><code dir=\"auto\">linker-search-paths</code></h4>\n<p>This adds paths for the linker to search, when linking normal C libraries.</p>\n<h4 id=\"linked-libraries\"><code dir=\"auto\">linked-libraries</code></h4>\n<p>This is a list of C libraries to link to. The names need to follow the normal\nnaming standard for how libraries are provided to the system linker,\nso for example on Linux, libraries have names like <code dir=\"auto\">libfoo.a</code> but when\npresented to the linker the name is <code dir=\"auto\">foo</code>. As an example <code dir=\"auto\">\"linked-libraries\": [\"curl\"]</code>\nwould on Linux look for the library <code dir=\"auto\">libcurl.a</code> and <code dir=\"auto\">libcurl.so</code> in the\npaths given by “linker-search-paths”.</p>\n<h4 id=\"version\"><code dir=\"auto\">version</code></h4>\n<p><em>Not handled yet</em></p>\n<p>Version for library, will also be provided as a compile time constant.</p>\n<h4 id=\"authors\"><code dir=\"auto\">authors</code></h4>\n<p><em>Not handled yet</em></p>\n<p>List of authors to add for library compilation.</p>\n<h4 id=\"langrev\"><code dir=\"auto\">langrev</code></h4>\n<p><em>Not handled yet</em></p>\n<p>The language revision to use.</p>\n<h4 id=\"features\"><code dir=\"auto\">features</code></h4>\n<p>This is a list of upper-case constants that can be tested for\nin the source code using <code dir=\"auto\">$feature(NAME_OF_FEATURE)</code>.</p>\n<h4 id=\"warnings\"><code dir=\"auto\">warnings</code></h4>\n<p><em>Not completely supported yet</em></p>\n<p>List of warnings to enable during compilation.</p>\n<h4 id=\"opt\"><code dir=\"auto\">opt</code></h4>\n<p>Optimization setting: O0, O1, O2, O3, O4, O5, Os, Oz.</p>\n<h2 id=\"target-options\">Target options</h2>\n<h4 id=\"type\"><code dir=\"auto\">type</code></h4>\n<p>This mandatory option should be one of “executable”, “dynamic-lib” and “static-lib”.</p>\n<p><em>More types will be added</em></p>\n<h2 id=\"using-environment-variables\">Using environment variables</h2>\n<p><em>Not supported yet</em></p>\n<p>In addition to constants any values starting with ”$” will be assumed to be environment variables.</p>\n<p>For example <code dir=\"auto\">\"$HOME\"</code> would on unix systems return the home directory. For strings that start with $ but <em>should not</em> be interpreted as an environment variable. For example, the string <code dir=\"auto\">\"\\$HOME\"</code> would be interpreted as the plain string <code dir=\"auto\">\"$HOME\"</code>.</p>";

				const frontmatter = {"title":"Project Configuration","description":"Project Configuration","sidebar":{"order":241}};
				const file = "/home/josh/git/c3_tests/experimental-site-testing-only__local_changes/src/content/docs/Build Your Project/project-config.md";
				const url = undefined;
				function rawContent() {
					return "# Customizing A Project\n\nThis is a description of the configuration options in `project.json`:\n\n\n```json5\n{\n  // Language version of C3.\n  \"langrev\": \"1\",\n  // Warnings used for all targets.\n  \"warnings\": [ \"no-unused\" ],\n  // Directories where C3 library files may be found.\n  \"dependency-search-paths\": [ \"lib\" ],\n  // Libraries to use for all targets.\n  \"dependencies\": [ ],\n  // Authors, optionally with email.\n  \"authors\": [ \"John Doe <john.doe@example.com>\" ],\n  // Version using semantic versioning.\n  \"version\": \"0.1.0\",\n  // Sources compiled for all targets.\n  \"sources\": [ \"src/**\" ],\n  // C sources if the project also compiles C sources\n  // relative to the project file.\n  // \"c-sources\": [ \"csource/**\" ],\n  // Include directories for C sources relative to the project file.\n  // \"c-include-dirs: [ \"csource/include\" ],\n  // Output location, relative to project file.\n  \"output\": \"../build\",\n  // Architecture and OS target.\n  // You can use 'c3c --list-targets' to list all valid targets,\n  // \"target\": \"windows-x64\",\n  // Current Target options:\n  //    android-aarch64 \n  //    elf-aarch64 elf-riscv32 elf-riscv64 elf-x86 elf-x64 elf-xtensa\n  //    mcu-x86 mingw-x64 netbsd-x86 netbsd-x64 openbsd-x86 openbsd-x64\n  //    freebsd-x86 freebsd-x64 ios-aarch64 \n  //    linux-aarch64 linux-riscv32 linux-riscv64 linux-x86 linux-x64 \n  //    macos-aarch64 macos-x64 \n  //    wasm32 wasm64 \n  //    windows-aarch64 windows-x64 \n  \"targets\": {\n    \"linux-x64\": {\n      // Executable or library.\n      \"type\": \"executable\",\n      // Additional libraries, sources\n      // and overrides of global settings here.\n    },\n  },\n  // Global settings.\n  // C compiler if the project also compiles C sources\n  // defaults to 'cc'.\n  \"cc\": \"cc\",\n  // CPU name, used for optimizations in the LLVM backend.\n  \"cpu\": \"generic\",\n  // Debug information, may be \"none\", \"full\" and \"line-tables\".\n  \"debug-info\": \"full\",\n  // FP math behaviour: \"strict\", \"relaxed\", \"fast\".\n  \"fp-math\": \"strict\",\n  // Link libc other default libraries.\n  \"link-libc\": true,\n  // Memory environment: \"normal\", \"small\", \"tiny\", \"none\".\n  \"memory-env\": \"normal\",\n  // Optimization: \"O0\", \"O1\", \"O2\", \"O3\", \"O4\", \"O5\", \"Os\", \"Oz\".\n  \"opt\": \"O0\",\n  // Code optimization level: \"none\", \"less\", \"more\", \"max\".\n  \"optlevel\": \"none\",\n  // Code size optimization: \"none\", \"small\", \"tiny\".\n  \"optsize\": \"none\",\n  // Relocation model: \"none\", \"pic\", \"PIC\", \"pie\", \"PIE\".\n  \"reloc\": \"none\",\n  // Trap on signed and unsigned integer wrapping for testing.\n  \"trap-on-wrap\": false,\n  // Turn safety (contracts, runtime bounds checking, null pointer checks etc).\n  \"safe\": true,\n  // Compile all modules together, enables more inlining.\n  \"single-module\": true,\n  // Use / don't use soft float, value is otherwise target default.\n  \"soft-float\": false,\n  // Strip unused code and globals from the output.\n  \"strip-unused\": true,\n  // The size of the symtab, which limits the amount\n  // of symbols that can be used. Should usually not be changed.\n  \"symtab\": 1048576,\n  // Use the system linker.\n  \"linker\": \"cc\",\n  // Include the standard library.\n  \"use-stdlib\": true,\n  // Set general level of x64 cpu: \"baseline\", \"ssse3\", \"sse4\", \"avx1\", \"avx2-v1\", \"avx2-v2\", \"avx512\", \"native\".\n  \"x86cpu\": \"native\",\n  // Set max type of vector use: \"none\", \"mmx\", \"sse\", \"avx\", \"avx512\", \"native\".\n  \"x86vec\": \"sse\",\n}\n```\n        \n\nBy default, an executable is assumed, but changing the type to `\"static-lib\"` or `\"dynamic-lib\"` \ncreates static library and dynamic library targets respectively.\n\n*This part will be updated, stay tuned* \n\n## Compilation options\n\nThe project file contains common settings at the top level, that can be overridden by each\ntarget, by simply assigning that particular key. So if the top level defines `target` to be `macos-x64`\nand the actual target defines it to be `windows-x64`, then the `windows-x64` will be used for compilation.\n\nSimilarly, compiler command line parameters can be used in turn to override the target setting.\n\n#### `targets`\n\nThe list of targets that can be built.\n\n#### `dependencies`\n\nList of C3 libraries (\".c3l\") to use when compiling the target.\n\n#### `sources`\n\nList of source files to compile and for tests which will run.\n\n#### `cc`\n\nC compiler to use for compiling C sources (if C sources are compiled together with C3 files).\n\n#### `c-sources`\n\nList of C sources to compile, using the default C compiler.\n\n#### `linker-search-paths`\n\nThis adds paths for the linker to search, when linking normal C libraries.\n\n#### `linked-libraries`\n\nThis is a list of C libraries to link to. The names need to follow the normal\nnaming standard for how libraries are provided to the system linker,\nso for example on Linux, libraries have names like `libfoo.a` but when\npresented to the linker the name is `foo`. As an example `\"linked-libraries\": [\"curl\"]`\nwould on Linux look for the library `libcurl.a` and `libcurl.so` in the \npaths given by \"linker-search-paths\".\n\n#### `version`\n\n*Not handled yet*\n\nVersion for library, will also be provided as a compile time constant.\n\n#### `authors`\n\n*Not handled yet*\n\nList of authors to add for library compilation.\n\n#### `langrev`\n\n*Not handled yet*\n\nThe language revision to use. \n\n#### `features`\n\nThis is a list of upper-case constants that can be tested for\nin the source code using `$feature(NAME_OF_FEATURE)`.\n\n#### `warnings`\n\n*Not completely supported yet*\n\nList of warnings to enable during compilation.\n\n#### `opt`\n\nOptimization setting: O0, O1, O2, O3, O4, O5, Os, Oz.\n\n## Target options\n\n#### `type`\n\nThis mandatory option should be one of \"executable\", \"dynamic-lib\" and \"static-lib\".\n\n*More types will be added*\n\n## Using environment variables\n\n*Not supported yet*\n\nIn addition to constants any values starting with \"$\" will be assumed to be environment variables.\n\nFor example `\"$HOME\"` would on unix systems return the home directory. For strings that start with $ but *should not* be interpreted as an environment variable. For example, the string `\"\\$HOME\"` would be interpreted as the plain string `\"$HOME\"`.\n";
				}
				function compiledContent() {
					return html;
				}
				function getHeadings() {
					return [{"depth":1,"slug":"customizing-a-project","text":"Customizing A Project"},{"depth":2,"slug":"compilation-options","text":"Compilation options"},{"depth":4,"slug":"targets","text":"targets"},{"depth":4,"slug":"dependencies","text":"dependencies"},{"depth":4,"slug":"sources","text":"sources"},{"depth":4,"slug":"cc","text":"cc"},{"depth":4,"slug":"c-sources","text":"c-sources"},{"depth":4,"slug":"linker-search-paths","text":"linker-search-paths"},{"depth":4,"slug":"linked-libraries","text":"linked-libraries"},{"depth":4,"slug":"version","text":"version"},{"depth":4,"slug":"authors","text":"authors"},{"depth":4,"slug":"langrev","text":"langrev"},{"depth":4,"slug":"features","text":"features"},{"depth":4,"slug":"warnings","text":"warnings"},{"depth":4,"slug":"opt","text":"opt"},{"depth":2,"slug":"target-options","text":"Target options"},{"depth":4,"slug":"type","text":"type"},{"depth":2,"slug":"using-environment-variables","text":"Using environment variables"}];
				}

				const Content = createComponent((result, _props, slots) => {
					const { layout, ...content } = frontmatter;
					content.file = file;
					content.url = url;

					return renderTemplate`${maybeRenderHead()}${unescapeHTML(html)}`;
				});

export { Content, compiledContent, Content as default, file, frontmatter, getHeadings, rawContent, url };
